{"ast":null,"code":"import _classCallCheck from\"/Users/jalton/Documents/GitHub/AngellSite/medium-post/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/jalton/Documents/GitHub/AngellSite/medium-post/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/jalton/Documents/GitHub/AngellSite/medium-post/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/jalton/Documents/GitHub/AngellSite/medium-post/node_modules/@babel/runtime/helpers/esm/createSuper\";import React from\"react\";import{Col,Row}from\"shards-react\";import MediumCard from\"./MediumCard\";// wrapper for items\nvar Slider=/*#__PURE__*/function(_React$Component){_inherits(Slider,_React$Component);var _super=_createSuper(Slider);function Slider(props){var _this;_classCallCheck(this,Slider);_this=_super.call(this,props);_this.mediumURL=\"https://api.rss2json.com/v1/api.json?rss_url=https://medium.com/feed/@altontech\";_this.state={itemRows:[],avatar:\"\",profileLink:\"\"};return _this;}_createClass(Slider,[{key:\"componentDidMount\",value:function componentDidMount(){var _this2=this;fetch(this.mediumURL).then(function(res){return res.json();}).then(function(data){// create two-dimensional array with 3 elements per inner array\nvar avatar=data.feed.image;var profileLink=data.feed.link;var res=data.items;//This is an array with the content. No feed, no info about author etc..\nvar posts=res.filter(function(item){return item.categories.length>0;});_this2.setState({avatar:avatar,profileLink:profileLink});var itemRows=[];posts.forEach(function(item,i){item[\"avatar\"]=_this2.state.avatar;// push avatar inside the json\nitem[\"profilelink\"]=_this2.state.profileLink;// push profile link inside the JSON\nvar row=Math.floor(i/3);if(!itemRows[row])itemRows[row]=[];itemRows[row].push(item);});_this2.setState({itemRows:itemRows});console.log(itemRows);});}},{key:\"render\",value:function render(){return/*#__PURE__*/React.createElement(\"div\",{className:\"blog__slider\"},this.state.itemRows.map(function(row,i){return/*#__PURE__*/React.createElement(Row,{key:i},row.map(function(item,j){return/*#__PURE__*/React.createElement(Col,{key:j,lg:\"4\",md:\"6\",sm:\"12\",className:\"mb-4\"},/*#__PURE__*/React.createElement(MediumCard,item));}));}));}}]);return Slider;}(React.Component);export default Slider;","map":{"version":3,"sources":["/Users/jalton/Documents/GitHub/AngellSite/medium-post/src/components/Slider.js"],"names":["React","Col","Row","MediumCard","Slider","props","mediumURL","state","itemRows","avatar","profileLink","fetch","then","res","json","data","feed","image","link","items","posts","filter","item","categories","length","setState","forEach","i","row","Math","floor","push","console","log","map","j","Component"],"mappings":"ghBAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,GAAT,CAAcC,GAAd,KAAyB,cAAzB,CACA,MAAOC,CAAAA,UAAP,KAAuB,cAAvB,CAEA;GACMC,CAAAA,M,4GACJ,gBAAYC,KAAZ,CAAmB,wCACjB,uBAAMA,KAAN,EADiB,MAInBC,SAJmB,CAKjB,iFALiB,CAEjB,MAAKC,KAAL,CAAa,CAAEC,QAAQ,CAAE,EAAZ,CAAgBC,MAAM,CAAE,EAAxB,CAA4BC,WAAW,CAAE,EAAzC,CAAb,CAFiB,aAGlB,C,gFAImB,iBAClBC,KAAK,CAAC,KAAKL,SAAN,CAAL,CACGM,IADH,CACQ,SAACC,GAAD,QAASA,CAAAA,GAAG,CAACC,IAAJ,EAAT,EADR,EAEGF,IAFH,CAEQ,SAACG,IAAD,CAAU,CACd;AACA,GAAMN,CAAAA,MAAM,CAAGM,IAAI,CAACC,IAAL,CAAUC,KAAzB,CACA,GAAMP,CAAAA,WAAW,CAAGK,IAAI,CAACC,IAAL,CAAUE,IAA9B,CACA,GAAML,CAAAA,GAAG,CAAGE,IAAI,CAACI,KAAjB,CAAwB;AACxB,GAAMC,CAAAA,KAAK,CAAGP,GAAG,CAACQ,MAAJ,CAAW,SAACC,IAAD,QAAUA,CAAAA,IAAI,CAACC,UAAL,CAAgBC,MAAhB,CAAyB,CAAnC,EAAX,CAAd,CAEA,MAAI,CAACC,QAAL,CAAc,CAAEhB,MAAM,CAAEA,MAAV,CAAkBC,WAAW,CAAEA,WAA/B,CAAd,EACA,GAAMF,CAAAA,QAAQ,CAAG,EAAjB,CACAY,KAAK,CAACM,OAAN,CAAc,SAACJ,IAAD,CAAOK,CAAP,CAAa,CACzBL,IAAI,CAAC,QAAD,CAAJ,CAAiB,MAAI,CAACf,KAAL,CAAWE,MAA5B,CAAoC;AACpCa,IAAI,CAAC,aAAD,CAAJ,CAAsB,MAAI,CAACf,KAAL,CAAWG,WAAjC,CAA8C;AAC9C,GAAMkB,CAAAA,GAAG,CAAGC,IAAI,CAACC,KAAL,CAAWH,CAAC,CAAG,CAAf,CAAZ,CACA,GAAI,CAACnB,QAAQ,CAACoB,GAAD,CAAb,CAAoBpB,QAAQ,CAACoB,GAAD,CAAR,CAAgB,EAAhB,CACpBpB,QAAQ,CAACoB,GAAD,CAAR,CAAcG,IAAd,CAAmBT,IAAnB,EACD,CAND,EAOA,MAAI,CAACG,QAAL,CAAc,CAAEjB,QAAQ,CAAEA,QAAZ,CAAd,EACAwB,OAAO,CAACC,GAAR,CAAYzB,QAAZ,EACD,CApBH,EAqBD,C,uCACQ,CACP,mBACE,2BAAK,SAAS,CAAC,cAAf,EACG,KAAKD,KAAL,CAAWC,QAAX,CAAoB0B,GAApB,CAAwB,SAACN,GAAD,CAAMD,CAAN,qBACvB,oBAAC,GAAD,EAAK,GAAG,CAAEA,CAAV,EACGC,GAAG,CAACM,GAAJ,CAAQ,SAACZ,IAAD,CAAOa,CAAP,qBACP,oBAAC,GAAD,EAAK,GAAG,CAAEA,CAAV,CAAa,EAAE,CAAC,GAAhB,CAAoB,EAAE,CAAC,GAAvB,CAA2B,EAAE,CAAC,IAA9B,CAAmC,SAAS,CAAC,MAA7C,eACE,oBAAC,UAAD,CAAgBb,IAAhB,CADF,CADO,EAAR,CADH,CADuB,EAAxB,CADH,CADF,CAaD,C,oBA7CkBtB,KAAK,CAACoC,S,EA+C3B,cAAehC,CAAAA,MAAf","sourcesContent":["import React from \"react\";\nimport { Col, Row } from \"shards-react\";\nimport MediumCard from \"./MediumCard\";\n\n// wrapper for items\nclass Slider extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { itemRows: [], avatar: \"\", profileLink: \"\" };\n  }\n  mediumURL =\n    \"https://api.rss2json.com/v1/api.json?rss_url=https://medium.com/feed/@altontech\";\n\n  componentDidMount() {\n    fetch(this.mediumURL)\n      .then((res) => res.json())\n      .then((data) => {\n        // create two-dimensional array with 3 elements per inner array\n        const avatar = data.feed.image;\n        const profileLink = data.feed.link;\n        const res = data.items; //This is an array with the content. No feed, no info about author etc..\n        const posts = res.filter((item) => item.categories.length > 0);\n\n        this.setState({ avatar: avatar, profileLink: profileLink });\n        const itemRows = [];\n        posts.forEach((item, i) => {\n          item[\"avatar\"] = this.state.avatar; // push avatar inside the json\n          item[\"profilelink\"] = this.state.profileLink; // push profile link inside the JSON\n          const row = Math.floor(i / 3);\n          if (!itemRows[row]) itemRows[row] = [];\n          itemRows[row].push(item);\n        });\n        this.setState({ itemRows: itemRows });\n        console.log(itemRows);\n      });\n  }\n  render() {\n    return (\n      <div className=\"blog__slider\">\n        {this.state.itemRows.map((row, i) => (\n          <Row key={i}>\n            {row.map((item, j) => (\n              <Col key={j} lg=\"4\" md=\"6\" sm=\"12\" className=\"mb-4\">\n                <MediumCard {...item} />\n              </Col>\n            ))}\n          </Row>\n        ))}\n      </div>\n    );\n  }\n}\nexport default Slider;\n"]},"metadata":{},"sourceType":"module"}