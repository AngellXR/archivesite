{"ast":null,"code":"var _jsxFileName = \"/Users/jalton/Documents/GitHub/AngellSite/medium-post/src/components/Slider.js\";\nimport React from \"react\";\nimport { Col, Row } from \"shards-react\";\nimport MediumCard from \"./MediumCard\"; // wrapper for items\n\nclass Slider extends React.Component {\n  constructor(props) {\n    super(props);\n    this.mediumURL = \"https://api.rss2json.com/v1/api.json?rss_url=https://medium.com/@altontech\";\n    this.state = {\n      itemRows: [],\n      avatar: \"\",\n      profileLink: \"\"\n    };\n  }\n\n  componentDidMount() {\n    fetch(this.mediumURL).then(res => res.json()).then(data => {\n      // create two-dimensional array with 3 elements per inner array\n      const avatar = data.feed.image;\n      const profileLink = data.feed.link;\n      const res = data.items; //This is an array with the content. No feed, no info about author etc..\n\n      const posts = res.filter(item => item.categories.length > 0);\n      this.setState({\n        avatar: avatar,\n        profileLink: profileLink\n      });\n      const itemRows = [];\n      posts.forEach((item, i) => {\n        item[\"avatar\"] = this.state.avatar; // push avatar inside the json\n\n        item[\"profilelink\"] = this.state.profileLink; // push profile link inside the JSON\n\n        const row = Math.floor(i / 3);\n        if (!itemRows[row]) itemRows[row] = [];\n        itemRows[row].push(item);\n      });\n      this.setState({\n        itemRows: itemRows\n      });\n      console.log(itemRows);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"blog__slider\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 7\n      }\n    }, this.state.itemRows.map((row, i) => /*#__PURE__*/React.createElement(Row, {\n      key: i,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }\n    }, row.map((item, j) => /*#__PURE__*/React.createElement(Col, {\n      key: j,\n      lg: \"4\",\n      md: \"6\",\n      sm: \"12\",\n      className: \"mb-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(MediumCard, Object.assign({}, item, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }\n    })))))));\n  }\n\n}\n\nexport default Slider;","map":{"version":3,"sources":["/Users/jalton/Documents/GitHub/AngellSite/medium-post/src/components/Slider.js"],"names":["React","Col","Row","MediumCard","Slider","Component","constructor","props","mediumURL","state","itemRows","avatar","profileLink","componentDidMount","fetch","then","res","json","data","feed","image","link","items","posts","filter","item","categories","length","setState","forEach","i","row","Math","floor","push","console","log","render","map","j"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Col, Row } from \"shards-react\";\nimport MediumCard from \"./MediumCard\";\n\n// wrapper for items\nclass Slider extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { itemRows: [], avatar: \"\", profileLink: \"\" };\n  }\n  mediumURL =\n    \"https://api.rss2json.com/v1/api.json?rss_url=https://medium.com/@altontech\";\n\n  componentDidMount() {\n    fetch(this.mediumURL)\n      .then((res) => res.json())\n      .then((data) => {\n        // create two-dimensional array with 3 elements per inner array\n        const avatar = data.feed.image;\n        const profileLink = data.feed.link;\n        const res = data.items; //This is an array with the content. No feed, no info about author etc..\n        const posts = res.filter((item) => item.categories.length > 0);\n\n        this.setState({ avatar: avatar, profileLink: profileLink });\n        const itemRows = [];\n        posts.forEach((item, i) => {\n          item[\"avatar\"] = this.state.avatar; // push avatar inside the json\n          item[\"profilelink\"] = this.state.profileLink; // push profile link inside the JSON\n          const row = Math.floor(i / 3);\n          if (!itemRows[row]) itemRows[row] = [];\n          itemRows[row].push(item);\n        });\n        this.setState({ itemRows: itemRows });\n        console.log(itemRows);\n      });\n  }\n  render() {\n    return (\n      <div className=\"blog__slider\">\n        {this.state.itemRows.map((row, i) => (\n          <Row key={i}>\n            {row.map((item, j) => (\n              <Col key={j} lg=\"4\" md=\"6\" sm=\"12\" className=\"mb-4\">\n                <MediumCard {...item} />\n              </Col>\n            ))}\n          </Row>\n        ))}\n      </div>\n    );\n  }\n}\nexport default Slider;\n"]},"metadata":{},"sourceType":"module"}